---

- name: install pre-requirements
  apt:
    pkg:
      - unzip
      - rng-tools
    state: present

- name: Copy rngd systemd template
  template:
    src: rngd.service.j2
    dest: /etc/systemd/system/rngd.service
    owner: root
    group: root
    mode: 0644

- name: Ensure that the rngd service is enabled and started at boot time
  service:
    name: rngd
    enabled: yes
    state: restarted

- name: Check if sdb exist
  stat:
    path: /dev/sdb
  register: sdb

- name: Format Data disk
  parted:
    device: /dev/sdb
    number: 1
    flags: [ lvm ]
    state: present
  when: sdb.stat.exists == True

- name: create volume groups for data disk
  lvg:
    vg: vg.data
    pvs: /dev/sdb1
  when: sdb.stat.exists == True

- name: create logical volume for data disk
  lvol:
    vg: vg.data
    lv: data
    size: +100%FREE
    state: present
  when: sdb.stat.exists == True

- name: format data volume
  filesystem:
    fstype: xfs
    dev: /dev/vg.data/data
  when: sdb.stat.exists == True

- name: create data dir
  file:
    path: /data
    state: directory
  when: sdb.stat.exists == True

- name: mount data disk in data dir
  mount:
    path: /data
    src: /dev/vg.data/data
    fstype: xfs
    state: mounted
  when: sdb.stat.exists == True

- name: Update the /etc/hosts file with node name
  tags: etchostsupdate
  become: yes
  become_user: root
  lineinfile:
    path: "/etc/hosts"
    regexp: ".*\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
    line: "{{ inventory_hostname }}\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
    state: present
    backup: yes
  register: etchostsupdate
  when: ansible_hostname != "{{ item }}" or ansible_hostname == "{{ item }}"
  with_items: "{{groups['all']}}"