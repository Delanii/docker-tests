---
- name: remove conflicting ubuntu pacakges
  apt:
    pkg:
    - docker
    - docker-engine
    - docker.io
    - containerd
    - runc
    state: absent

- name: install needed prerequiremts
  apt:
    pkg:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg-agent
    - software-properties-common
    state: present

- name: install needed pip modules
  pip:
    name:
      - docker

- name: add the offial Docker repo GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: add the offial Docker repo
  apt_repository:
    repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable'
    state: present
    filename: docker.io
    update_cache: yes

- name: Install the offical docker packages
  apt:
    pkg:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    state: present

- name: Ensure that the docker service is enabled and started at boot time
  service:
    name: docker
    enabled: yes
    state: restarted

- name: Bootstrap docker swarm on first swarm master
  docker_swarm:
    state: present
  register: swarm_info
  run_once: true
  delegate_to: "{{ groups.swarm_masters[0] }}"

- name: Add other swarm masters to bootstrapped cluster
  docker_swarm:
    state: join
    remote_addrs: "{{ hostvars[swarm_master[0]]['ansible_default_ipv4']['address'] }}"
    join_token: "{{ swarm_info.swarmfacts.JoinTokens.Manager }}"
  when: groups.swarm_masters[1:]

- name: Add other swarm workers to bootstrapped cluster
  docker_swarm:
    state: join
    remote_addrs: "{{ hostvars[swarm_master[0]]['ansible_default_ipv4']['address'] }}"
    join_token: "{{ swarm_info.swarmfacts.JoinTokens.Worker }}"
  when: groups.swarm_workers

- name: check if glusterfs plugin if already installed
  shell: "docker plugin ls |grep glusterfs |awk '{print $2}'"
  register: plugin

- name: GlusterFS block
  block:
  - name: install glusterfs plugin
    command: "docker plugin install --alias glusterfs trajano/glusterfs-volume-plugin --grant-all-permissions --disable"

  - name: set gluster nodes in plugin
    command: "docker plugin set glusterfs SERVERS={{ node_ips }}"

  - name: enable the plugin
    command: docker plugin enable glusterfs
  when: plugin.stdout != 'glusterfs:latest'