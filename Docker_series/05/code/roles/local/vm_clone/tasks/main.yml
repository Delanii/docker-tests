---
- name: "Get facts for named template"
  vmware_guest_disk_info:
    hostname: "{{ vcenter_server }}"
    username: "{{ vcenter_user }}"
    password: "{{ vcenter_pass }}"
    validate_certs: False
    datacenter: "{{ datacenter_name }}"
    name: "{{ template_name }}"
  register: template_disk
  delegate_to: localhost

#- name: "Define new disk structure"
#  set_fact:
#    vm_disks: >-
#      [{% for disk in (template_disk.guest_disk_info|dictsort) %}{
#        'size_kb': {{ disk[1].capacity_in_kb }},
#        'datastore': {{ datastore_name }}},
#      {% endfor %}
#      {% for disk in additional_disks|default([]) %}{
#        {% if disk.size_gb is defined %}'size_gb': {{ disk.size_gb }},{% endif %}
#        {% if disk.size_mb is defined %}'size_mb': {{ disk.size_mb }},{% endif %}
#        {% if disk.size_kb is defined %}'size_kb': {{ disk.size_kb }},{% endif %}
#        'datastore': {{ datastore_name }}},
#      {% endfor %}]
#  delegate_to: localhost

- name: "Define new disk structure"
  set_fact:
    vm_disks: >-
      {% set results = [] %}
      {% for osdisk in (template_disk.guest_disk_info|dictsort) %}
      {% set osdisk = {"size_kb": disk[1].capacity_in_kb} %}
      {% set _ = osdisk.update({"datastore": disk[1].backing_datastore}) %}
      {% set _ = results.append(osdisk) %}
      {% endfor %}
      "{{ results }}"

#      {% for disk in additional_disks|default([]) %}
#      {% set d = {"size_gb": disk.size_gb} if (disk.size_gb is defined) else {} %}
#      {% set d = {"size_mb": disk.size_mb} if (disk.size_mb is defined) else {} %}
#      {% set d = {"size_kb": disk.size_kb} if (disk.size_kb is defined) else {} %}
#      {% set _ = d.update({"datastore": datastore_name}) %}
#      {% set _ = results.append(d) %}
#      {% endfor %}


- name: Debugging var
  debug:
    var: vm_disks

- name: Clone the template
  vmware_guest:
    hostname: "{{ vcenter_server }}"
    username: "{{ vcenter_user }}"
    password: "{{ vcenter_pass }}"
    validate_certs: False
    name: "{{ inventory_hostname }}"
    template: "{{ template_name }}"
    datacenter: "{{ datacenter_name }}"
    folder: "/{{ datacenter_name }}/vm/{{ folder_name }}"
    cluster: "{{ cluster_name }}"
    datastore: "{{ datastore_name }}"
    resource_pool: "{{ resource_pool_name }}"
    disk: "{{ vm_disks }}"
    hardware:
      memory_gb: "{{ mem_size_gb }}"
      num_cpu: "{{ cpu_size }}"
    networks:
    - name: "{{ network_name }}"
      ip: "{{ ansible_host }}"
      netmask: "{{ network_mask }}"
      gateway: "{{ network_gw }}"
      type: static
    customization:
      hostname: "{{ inventory_hostname }}"
      domain: "{{ domain_name }}"
      dns_suffix:
        - "{{ domain_name }}"
      dns_servers: "{{ network_dns }}"
    state: poweredon
    wait_for_ip_address: yes
  delegate_to: localhost
